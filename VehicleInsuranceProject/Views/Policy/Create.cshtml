@model VehicleInsuranceProject.Repository.Models.Policy

@{
    ViewData["Title"] = "Create New Policy";
}

@section Head {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
}

<div class="container dashboard-container">
    <h2 class="mb-4"><i class="bi bi-file-earmark-plus me-2"></i> @ViewData["Title"]</h2>

    @* Display Errors from Controller *@
    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

    <div class="card shadow-sm p-4">
        <form asp-action="Create">
            @Html.AntiForgeryToken()

            <div class="row g-3">
                <div class="col-md-6">
                    <label asp-for="vehicleId" class="form-label">Select Vehicle</label>
                    <select asp-for="vehicleId" class="form-select" asp-items="ViewBag.Vehicles" required>
                        <option value="">-- Select a Vehicle --</option>
                    </select>
                    <span asp-validation-for="vehicleId" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="CoverageLevelId" class="form-label">Coverage Level</label>
                    <select asp-for="CoverageLevelId" class="form-select" asp-items="ViewBag.CoverageLevels" required>
                        <option value="">-- Select Coverage Level --</option>
                    </select>
                    <span asp-validation-for="CoverageLevelId" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="startDate" class="form-label">Start Date</label>
                    <input asp-for="startDate" type="date" class="form-control" />
                    <span asp-validation-for="startDate" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="endDate" class="form-label">End Date</label>
                    <input asp-for="endDate" type="date" class="form-control" />
                    <span asp-validation-for="endDate" class="text-danger"></span>
                </div>

                <!-- Premium and Coverage Amount will be calculated by the service
                     and populated on the server-side before the form is redisplayed
                     or on initial load for defaults. These fields can be read-only if desired. -->
                <div class="col-md-6">
                    <label asp-for="premiumAmount" class="form-label">Calculated Premium Amount</label>
                    <input asp-for="premiumAmount" class="form-control" type="number" step="0.01" min="0.01" readonly /> 
                    <span asp-validation-for="premiumAmount" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="coverageAmount" class="form-label">Calculated Coverage Amount</label>
                    <input asp-for="coverageAmount" class="form-control" type="number" step="0.01" min="0.01" readonly /> 
                    <span asp-validation-for="coverageAmount" class="text-danger"></span>
                </div>

                <!-- Hidden fields for policyNumber and policyStatus, handled by service -->
                <input type="hidden" asp-for="policyNumber" />
                <input type="hidden" asp-for="policyStatus" />

            </div>

            <div class="mt-4 d-flex justify-content-between">
                <a asp-action="ViewPolicies" class="btn btn-secondary"><i class="bi bi-arrow-left-circle me-2"></i> Back to Policies</a>
                <button type="submit" class="btn btn-insure-primary btn-lg"><i class="bi bi-save me-2"></i> Create Policy</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Client-side logic for dynamic calculation.
        // This will now make an AJAX call to get the premium/coverage from the server.
        function updatePremiumAndCoverageAjax() {
            var vehicleId = $('#vehicleId').val();
            var coverageLevelId = $('#CoverageLevelId').val(); // Changed to CoverageLevelId

            if (vehicleId && coverageLevelId) {
                // AJAX call to a new controller action to get calculated values
                $.ajax({
                    url: '@Url.Action("CalculatePolicyValues", "Policy")', // NEW AJAX endpoint
                    type: 'GET',
                    data: { vehicleId: vehicleId, coverageLevelId: coverageLevelId }, // Pass IDs
                    success: function(data) {
                        if (data.success) {
                            $('#premiumAmount').val(data.premium.toFixed(2));
                            $('#coverageAmount').val(data.coverage.toFixed(2));
                        } else {
                            // Handle error if calculation failed on server (e.g., invalid IDs)
                            console.error("Error calculating policy values:", data.message);
                            $('#premiumAmount').val('0.00');
                            $('#coverageAmount').val('0.00');
                            alert("Could not calculate policy values. " + data.message); // Use alert for simple demo
                        }
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        console.error("AJAX Error:", textStatus, errorThrown);
                        $('#premiumAmount').val('0.00');
                        $('#coverageAmount').val('0.00');
                        alert("An error occurred during calculation. Please try again.");
                    }
                });
            } else {
                $('#premiumAmount').val('0.00');
                $('#coverageAmount').val('0.00');
            }
        }

        $(document).ready(function() {
            // Initial calculation on page load if values are present (e.g., after postback with errors)
            updatePremiumAndCoverageAjax();

            // Call when vehicle or coverage level changes
            $('#vehicleId, #CoverageLevelId').change(updatePremiumAndCoverageAjax); // Changed to CoverageLevelId
        });
    </script>
}

<style>
    /* Custom styles for this view */
    .dashboard-container {
        padding-top: 20px;
        padding-bottom: 20px;
    }

    .card {
        border: none;
        border-radius: 8px;
    }

    .form-label {
        font-weight: 600;
        color: #333;
    }

    .btn-insure-primary {
        background-color: #6A0DAD; /* Purple */
        border-color: #6A0DAD;
        color: white;
        transition: background-color 0.2s ease-in-out;
    }

    .btn-insure-primary:hover {
        background-color: #550a99; /* Darker purple */
        border-color: #550a99;
    }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
        color: white;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
        border-color: #545b62;
    }
</style>
