@model IEnumerable<VehicleInsuranceProject.Repository.Models.Policy>
@using VehicleInsuranceProject.Repository.Models;

@{
    ViewData["Title"] = "My Policies";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Assuming the default layout
}

@section Head {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    @* Include jQuery for AJAX and modal handling *@
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
}

<div class="container py-5 policy-list-bg">
    <h2 class="mb-5 text-center fw-bolder text-slate display-4">
        <i class="bi bi-journal-check me-3"></i> @ViewData["Title"]
    </h2>

    @* --- Message Display Section --- *@
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show mt-4 rounded-3 shadow-sm" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show mt-4 rounded-3 shadow-sm" role="alert">
            <i class="bi bi-x-octagon-fill me-2"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["InfoMessage"] != null)
    {
        <div class="alert alert-info alert-dismissible fade show mt-4 rounded-3 shadow-sm" role="alert">
            <i class="bi bi-info-circle-fill me-2"></i> @TempData["InfoMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @* --- End Message Display Section --- *@

    <p class="text-center mb-5">
        <a asp-action="Create" asp-controller="Policy" class="btn btn-teal btn-lg rounded-pill px-5 py-2 fw-bold shadow-md hover-shadow-lg">
            <i class="bi bi-plus-circle me-2"></i> Create New Policy
        </a>
    </p>

    @if (Model != null && Model.Any())
    {
        <div class="table-responsive mt-4">
            <table class="table table-hover shadow-xl rounded-4 overflow-hidden align-middle policy-table">
                <thead class="bg-teal-header text-dark-slate">
                    <tr>
                        <th class="py-3">Policy Number</th>
                        <th class="py-3">Vehicle (Reg No)</th>
                        <th class="py-3">Coverage Level</th>
                        <th class="py-3 text-end">Premium</th>
                        <th class="py-3 text-end">Coverage</th>
                        <th class="py-3">Start Date</th>
                        <th class="py-3">End Date</th>
                        <th class="py-3">Status</th>
                        <th class="text-center py-3">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.OrderByDescending(p => p.policyId))
                    {
                        <tr>
                            <td class="fw-semibold text-teal-accent">@Html.DisplayFor(modelItem => item.policyNumber)</td>
                            <td>@Html.DisplayFor(modelItem => item.Vehicle.registrationNumber)</td>
                            <td>@(item.CoverageLevel?.Name ?? "N/A")</td>
                            <td class="text-end fw-bold text-slate">@string.Format("{0:C}", item.premiumAmount)</td>
                            <td class="text-end">@string.Format("{0:C}", item.coverageAmount)</td>
                            <td>@item.startDate.ToShortDateString()</td>
                            <td>@item.endDate.ToShortDateString()</td>
                            <td>
                                @{
                                    var statusClass = item.policyStatus == PolicyStatus.ACTIVE ? "badge-active" : "badge-expired";
                                }
                                <span class="badge @statusClass py-2 px-3 fw-normal">
                                    @Html.DisplayFor(modelItem => item.policyStatus)
                                </span>
                            </td>
                            <td class="text-center d-flex justify-content-center gap-2">
                                @* Details Button *@
                                <a asp-action="Details" asp-controller="Policy" asp-route-policyId="@item.policyId" class="btn btn-sm btn-outline-info rounded-3 action-btn" title="Details">
                                    <i class="bi bi-eye"></i>
                                </a>

                                @* Renew Logic *@
                                @{
                                    var daysUntilExpiry = (item.endDate - DateTime.Today).TotalDays;
                                    bool canRenew = item.policyStatus == PolicyStatus.ACTIVE && daysUntilExpiry >= 0 && daysUntilExpiry <= 30; // 30-day window
                                }
                                @if (canRenew)
                                {
                                    <a asp-action="Renew" asp-controller="Policy" asp-route-policyId="@item.policyId" class="btn btn-sm btn-outline-success rounded-3 action-btn" title="Renew Policy">
                                        <i class="bi bi-arrow-clockwise"></i>
                                    </a>
                                }
                                else
                                {
                                    <button class="btn btn-sm btn-outline-secondary rounded-3 action-btn" title="Renew (Available within 30 days of expiry)" disabled>
                                        <i class="bi bi-arrow-clockwise"></i>
                                    </button>
                                }

                                @* File Claim Logic *@
                                @{
                                    bool hasOpenOrApprovedClaim = item.Claims != null && item.Claims.Any(c => c.claimStatus == ClaimStatus.SUBMITTED || c.claimStatus == ClaimStatus.APPROVED);
                                    bool canFileClaim = item.policyStatus == PolicyStatus.ACTIVE && !hasOpenOrApprovedClaim;
                                }

                                @if (canFileClaim)
                                {
                                    <a asp-action="FileClaim" asp-controller="Claims" asp-route-policyId="@item.policyId" class="btn btn-sm btn-outline-teal rounded-3 action-btn" title="File Claim">
                                        <i class="bi bi-file-earmark-medical"></i>
                                    </a>
                                }
                                else
                                {
                                    <button class="btn btn-sm btn-outline-secondary rounded-3 action-btn" title="File Claim (Policy must be Active and have no open claims)" disabled>
                                        <i class="bi bi-file-earmark-medical"></i>
                                    </button>
                                }

                                @* Delete Button (Uses Modal for Confirmation) *@
                                <button type="button" class="btn btn-sm btn-outline-danger rounded-3 delete-btn action-btn" 
                                        data-policy-id="@item.policyId" data-policy-number="@item.policyNumber" title="Delete Policy">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="empty-state-section p-5 text-center rounded-4 shadow-lg">
            <i class="bi bi-journal-check display-1 text-teal-accent mb-3"></i>
            <p class="lead text-slate">It looks like you don't have any policies yet.</p>
            <p class="text-muted mb-4">Click the button below to start insuring your vehicle!</p>
            <a asp-action="Create" asp-controller="Policy" class="btn btn-teal btn-lg rounded-pill px-5 py-2 fw-bold shadow-md hover-shadow-lg">
                <i class="bi bi-plus-circle-fill me-2"></i> Create Your First Policy
            </a>
        </div>
    }
</div>

@* --- Delete Confirmation Modal (Replaces confirm()) --- *@
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-4 shadow-lg border-danger">
            <div class="modal-header bg-danger text-white rounded-top-4">
                <h5 class="modal-title fw-bold" id="deleteConfirmationModalLabel"><i class="bi bi-exclamation-triangle-fill me-2"></i> Confirm Deletion</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <p>Are you absolutely sure you want to delete policy <strong><span id="policyNumberToDelete" class="text-danger"></span></strong>?</p>
                <p class="text-muted small">This action cannot be undone and will permanently remove all associated policy data.</p>
            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-outline-secondary rounded-pill px-3" data-bs-dismiss="modal">Cancel</button>
                <form id="deletePolicyForm" asp-action="Delete" asp-controller="Policy" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="policyId" id="policyIdInput" value="" />
                    <button type="submit" class="btn btn-danger rounded-pill px-4 fw-bold">
                        <i class="bi bi-trash me-2"></i> Delete Policy
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>
@* --- End Delete Confirmation Modal --- *@

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function() {
            // 1. Auto-hide alerts after 7 seconds
            setTimeout(function() {
                $(".alert-dismissible").fadeTo(500, 0).slideUp(500, function(){
                    $(this).remove();
                });
            }, 7000); // 7 seconds

            // 2. Delete Modal Logic (Replaces confirm())
            $('.delete-btn').on('click', function() {
                const policyId = $(this).data('policy-id');
                const policyNumber = $(this).data('policy-number');
                
                // Update modal content and form action
                $('#policyNumberToDelete').text(policyNumber);
                $('#policyIdInput').val(policyId);
                
                // Show the modal
                // NOTE: This requires Bootstrap's JS bundle to be loaded in _Layout.cshtml
                $('#deleteConfirmationModal').modal('show');
            });
        });
    </script>
}

<style>
    /* New Teal/Slate Theme */
    :root {
        --color-teal-primary: #00796b; /* Dark Teal */
        --color-teal-light: #e0f2f1; /* Light Mint/Header BG */
        --color-slate: #263238; /* Dark Slate Text */
        --color-teal-accent: #004d40; /* Very Dark Teal for accents */
    }

    /* Global Background Consistency */
    body {
        background-color: #f0f4f8 !important; /* Light background */
    }
    
    .policy-list-bg {
        padding-top: 50px !important;
        padding-bottom: 50px !important;
    }

    .text-slate {
        color: var(--color-slate); 
    }
    .text-teal-accent {
        color: var(--color-teal-accent);
    }

    /* Primary Teal Button */
    .btn-teal {
        background-color: var(--color-teal-primary); 
        border-color: var(--color-teal-primary);
        color: white;
        transition: all 0.3s ease;
    }

    .btn-teal:hover {
        background-color: var(--color-teal-accent); 
        border-color: var(--color-teal-accent);
        transform: translateY(-2px);
        box-shadow: 0 6px 12px rgba(0, 121, 107, 0.25);
    }
    
    .btn-outline-teal {
        color: var(--color-teal-primary);
        border-color: var(--color-teal-primary);
    }

    .btn-outline-teal:hover {
        background-color: var(--color-teal-primary);
        color: white;
    }

    /* Table Styling */
    .policy-table {
        border-radius: 1rem !important;
        border: 1px solid #e9ecef;
        background-color: white;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05); 
    }

    .bg-teal-header {
        background-color: var(--color-teal-light); /* Light Mint Header */
        color: var(--color-slate);
        border-bottom: 2px solid var(--color-teal-primary);
        font-weight: 700;
    }
    
    .policy-table tbody tr:hover {
        background-color: #f8fcfc; /* Very light hover effect */
    }
    
    /* Status Badges */
    .badge-active {
        background-color: #4caf50; /* Green accent for Active */
        color: white;
    }

    .badge-expired {
        background-color: #f44336; /* Red accent for Expired/Inactive */
        color: white;
    }
    
    /* Action Buttons Hover Effect */
    .action-btn {
        transition: transform 0.15s ease;
    }
    .action-btn:hover {
        transform: scale(1.05);
    }

    /* Empty State Styling */
    .empty-state-section {
        background: #ffffff;
        border: 1px solid var(--color-teal-light);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    }
</style>
