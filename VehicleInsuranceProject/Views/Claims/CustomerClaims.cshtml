@* VehicleInsuranceProject.Web/Views/Claims/CustomerClaims.cshtml *@
@model IEnumerable<VehicleInsuranceProject.Repository.Models.Claim>
@using VehicleInsuranceProject.Repository.Models; @* Added using for PolicyStatus, ClaimStatus *@

@{
    ViewData["Title"] = "Your Filed Claims";
}

@section Head {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
}

<div class="container dashboard-container">
    @* Consistent container for styling *@
    <h2 class="mb-4 text-center"><i class="bi bi-file-earmark-text me-2"></i> @ViewData["Title"]</h2> @* Added icon and centered title *@

    @* Display Success/Error Messages using TempData with Bootstrap alert classes *@
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show mt-4" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show mt-4" role="alert">
            <i class="bi bi-x-circle-fill me-2"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (!Model.Any())
    {
        <div class="empty-state-section">
            @* Consistent empty state styling *@
            <i class="bi bi-file-earmark-medical"></i> @* Icon for no claims filed by customer *@
            <p>You have not filed any claims yet.</p>
            <p>
                <a asp-action="ViewPolicies" asp-controller="Customer" class="btn btn-insure-primary btn-lg mt-3">
                    @* Used custom button class *@
                    <i class="bi bi-journals me-2"></i> View your policies to file a claim.
                </a>
            </p>
        </div>
    }
    else
    {
        <div class="table-responsive mt-4">
            <table class="table table-striped table-hover shadow-sm rounded-3 overflow-hidden">
                @* Applied table styling classes *@
                <thead class="bg-insure-dark-purple text-insure-white">
                    @* Use custom theme colors *@
                    <tr>
                        <th>Claim ID</th>
                        <th>Policy Number</th>
                        <th>Claim Amount</th>
                        <th>Reason</th>
                        <th>Claim Date</th>
                        <th>Status</th>
                        <th class="text-center">Actions</th> @* Centered actions column header *@
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.OrderByDescending(c => c.claimDate)) @* Order by most recent claims first *@
                    {
                        <tr>
                            <td>@item.claimId</td>
                            <td>@item.Policy?.policyNumber</td>
                            <td>@item.claimAmount.ToString("C")</td>
                            <td>@item.claimReason</td>
                            <td>@item.claimDate.ToShortDateString()</td>
                            <td>
                                @{
                                    string badgeClass = "";
                                    switch (item.claimStatus)
                                    {
                                        case ClaimStatus.SUBMITTED:
                                            badgeClass = "bg-warning text-dark"; // Bootstrap warning for pending
                                            break;
                                        case ClaimStatus.APPROVED:
                                            badgeClass = "bg-insure-accent-green"; // Your custom success color
                                            break;
                                        case ClaimStatus.REJECTED:
                                            badgeClass = "bg-insure-accent-red"; // Your custom danger color
                                            break;
                                        default:
                                            badgeClass = "bg-secondary"; // Fallback for other statuses
                                            break;
                                    }
                                }
                                <span class="badge @badgeClass">@item.claimStatus</span>
                            </td>
                            <td class="text-center d-flex justify-content-center">
                                @* Applied flexbox for button alignment *@
                                <a asp-action="Details" asp-route-id="@item.claimId" class="btn btn-sm btn-outline-info" title="View Details">
                                    <i class="bi bi-eye me-1"></i> Details
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function() {
            setTimeout(function() {
                $(".alert-dismissible").fadeTo(500, 0).slideUp(500, function(){
                    $(this).remove();
                });
            }, 7000); // 7 seconds
        });
    </script>
}