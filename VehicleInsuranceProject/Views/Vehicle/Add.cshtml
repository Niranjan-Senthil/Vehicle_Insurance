@model VehicleInsuranceProject.Repository.Models.Vehicle
@using VehicleInsuranceProject.Repository.Models

@{
    ViewData["Title"] = "Add New Vehicle";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Ensure your layout is correctly referenced
}

<style>
    /* Main form container - clean, professional card */
    .insure-form-card {
        max-width: 800px;
        margin: 60px auto; /* More margin top/bottom */
        padding: 40px;
        background-color: #ffffff; /* Clean white background */
        border-radius: 12px; /* Nicely rounded corners */
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1); /* Soft, subtle shadow */
        border: 1px solid #e0e0e0; /* Light border for definition */
    }

        /* Heading for the form */
        .insure-form-card h2 {
            font-size: 2.5rem; /* Prominent heading */
            font-weight: 700; /* Bold */
            color: #4a0e7e; /* Deep purple (from logo inference) */
            margin-bottom: 35px; /* More space below heading */
            text-align: center;
            position: relative;
            padding-bottom: 15px;
        }

            /* Underline accent for the heading */
            .insure-form-card h2::after {
                content: '';
                position: absolute;
                left: 50%;
                bottom: 0;
                transform: translateX(-50%);
                width: 90px; /* Decent length */
                height: 4px; /* Thickness */
                background-color: #7b2cbf; /* A brighter purple/blue accent */
                border-radius: 2px;
            }

    /* Labels */
    .insure-label {
        font-weight: 600; /* Semi-bold labels */
        color: #333333; /* Dark, readable text */
        margin-bottom: 8px; /* Space between label and input */
    }

    /* Form Controls (Inputs, Selects) */
    .insure-input, .insure-select {
        border-radius: 8px; /* Consistent rounding */
        border: 1px solid #d1d9e6; /* Soft, light border */
        padding: 0.8rem 1.1rem;
        font-size: 1.05rem;
        color: #495057; /* Standard text color */
        transition: all 0.3s ease;
    }

        .insure-input::placeholder {
            color: #a0a8b4; /* Muted placeholder text */
        }

        .insure-input:focus, .insure-select:focus {
            border-color: #7b2cbf; /* Accent color on focus */
            box-shadow: 0 0 0 0.25rem rgba(123, 44, 191, 0.25); /* Soft glow matching accent */
            outline: none; /* Remove default outline */
            background-color: #fcfdff; /* Slightly whiter background on focus */
        }

    /* Validation summary and individual field errors */
    .validation-summary-errors {
        background-color: #fff0f0; /* Very light red background */
        color: #d80000; /* Darker red text */
        border: 1px solid #ffcccc; /* Red border */
        border-radius: 8px;
        padding: 15px 20px;
        margin-bottom: 25px;
        font-size: 0.95rem;
    }

    .field-validation-error {
        color: #d80000; /* Darker red for individual field errors */
        font-size: 0.85rem;
        margin-top: 5px;
        display: block; /* Ensure it takes its own line */
    }

    /* Buttons - Primary action */
    .btn-insure-primary {
        background-color: #6c20b5; /* Deep purple from logo inference */
        border-color: #6c20b5;
        color: #ffffff;
        padding: 0.9rem 2.2rem;
        font-size: 1.15rem;
        font-weight: 600;
        border-radius: 8px;
        transition: all 0.2s ease-in-out;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

        .btn-insure-primary:hover {
            background-color: #5a199f; /* Slightly darker purple on hover */
            border-color: #5a199f;
            transform: translateY(-2px); /* Slight lift */
            box-shadow: 0 6px 15px rgba(108, 32, 181, 0.25); /* Soft shadow */
            color: #ffffff; /* Keep text white */
        }

        .btn-insure-primary:active {
            transform: translateY(0);
            box-shadow: none;
        }

    /* Buttons - Secondary action */
    .btn-insure-secondary {
        background-color: #e9ecef; /* Light grey for secondary */
        border: 1px solid #d1d9e6;
        color: #495057; /* Dark text */
        padding: 0.9rem 2.2rem;
        font-size: 1.15rem;
        font-weight: 600;
        border-radius: 8px;
        transition: all 0.2s ease-in-out;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

        .btn-insure-secondary:hover {
            background-color: #dee2e6; /* Darker grey on hover */
            border-color: #c5cbd3;
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
            color: #495057; /* Keep text dark */
        }

        .btn-insure-secondary:active {
            transform: translateY(0);
            box-shadow: none;
        }

    /* General body background */
    body {
        background-color: #f4f6f9; /* Off-white, soft background for the page */
        font-family: 'Inter', 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
    }
</style>

<div class="container insure-form-card">
    <h2>Add New Vehicle</h2>

    <form asp-action="Add" method="post">
        @* This hidden input for CustomerId is now populated by the controller's GET action.
           It's sent back to the POST action, but the POST action will re-verify/override it
           with the CustomerId from the logged-in user for security. *@
        <input type="hidden" asp-for="CustomerId" />

        <div asp-validation-summary="ModelOnly" class="validation-summary-errors" role="alert"></div>

        <div class="row">
            <div class="col-md-6">
                <div class="mb-4">
                    <label asp-for="registrationNumber" class="form-label insure-label">Registration Number</label>
                    <input asp-for="registrationNumber" class="form-control insure-input" placeholder="e.g., MH12AB1234" />
                    <span asp-validation-for="registrationNumber" class="field-validation-error"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-4">
                    <label asp-for="make" class="form-label insure-label">Make</label>
                    <input asp-for="make" class="form-control insure-input" placeholder="e.g., Toyota" />
                    <span asp-validation-for="make" class="field-validation-error"></span>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="mb-4">
                    <label asp-for="model" class="form-label insure-label">Model</label>
                    <input asp-for="model" class="form-control insure-input" placeholder="e.g., Camry" />
                    <span asp-validation-for="model" class="field-validation-error"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-4">
                    <label asp-for="yearOfManufacture" class="form-label insure-label">Year of Manufacture</label>
                    <input asp-for="yearOfManufacture" class="form-control insure-input" placeholder="e.g., 2020" />
                    <span asp-validation-for="yearOfManufacture" class="field-validation-error"></span>
                </div>
            </div>
        </div>

        <div class="mb-5">
            <label asp-for="vehicleType" class="form-label insure-label">Vehicle Type</label>
            <select asp-for="vehicleType" class="form-select insure-select">
                <option value="">-- Select Type --</option>
                @* Dynamically generate options from the enum *@
                @foreach (var type in Html.GetEnumSelectList<VehicleType>()) // <--- CHANGED THIS LINE
                {
                    <option value="@type.Value">@type.Text</option>
                }
            </select>
            <span asp-validation-for="vehicleType" class="field-validation-error"></span>
        </div>

        <div class="d-grid gap-3 d-md-flex justify-content-md-center">
            <button type="submit" class="btn btn-insure-primary">
                <i class="bi bi-plus-circle me-2"></i> Add Vehicle
            </button>
            <a asp-controller="Vehicle" asp-action="ViewVehicles" class="btn btn-insure-secondary">
                <i class="bi bi-x-circle me-2"></i> Cancel
            </a>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}