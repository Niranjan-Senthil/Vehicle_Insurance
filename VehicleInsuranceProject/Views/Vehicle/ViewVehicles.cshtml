@model IEnumerable<VehicleInsuranceProject.Repository.Models.Vehicle>

@{
    ViewData["Title"] = "My Vehicles";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Ensure your layout is correctly referenced
}

<style>
    /*
         * IMPORTANT: Color Palette Variables are defined in wwwroot/css/site.css
         * Do NOT redefine them here. Refer to them directly using var(--variable-name).
         */

    /* Global Body Styling (if specific to this page, otherwise use site.css) */
    body {
        background-color: var(--dashboard-bg); /* Using a variable from site.css */
        font-family: 'Open Sans', sans-serif; /* Using font from site.css */
        color: var(--insure-edge-dark-text); /* Using text color from site.css */
    }

    /* Main Container for the Page Content */
    .vehicles-main-card {
        max-width: 1200px;
        margin: 60px auto; /* Centered with vertical spacing */
        padding: 30px;
        background-color: #ffffff;
        border-radius: 12px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08); /* Soft, elegant shadow */
        border: 1px solid var(--dashboard-activity-border); /* Using a variable from site.css */
    }

        /* Page Heading Style */
        .vehicles-main-card h2 {
            font-size: 2.5rem;
            font-weight: 700;
            /* CHANGE: Heading color to dark purple */
            color: var(--insure-edge-dark-purple); /* Reference from site.css */
            margin-bottom: 30px;
            text-align: center;
            position: relative;
            padding-bottom: 15px;
        }

            /* Underline for the heading */
            .vehicles-main-card h2::after {
                content: '';
                position: absolute;
                left: 50%;
                bottom: 0;
                transform: translateX(-50%);
                width: 100px;
                height: 4px;
                /* CHANGE: Underline to mid-purple (or light if preferred) */
                background-color: var(--insure-edge-mid-purple); /* Reference from site.css */
                border-radius: 2px;
            }

    /* Add New Vehicle Button */
    .btn-add-vehicle {
        /* CHANGE: Background to light purple */
        background-color: var(--insure-edge-light-purple); /* Reference from site.css */
        /* CHANGE: Border to dark purple */
        border-color: var(--insure-edge-dark-purple); /* Reference from site.css */
        color: var(--insure-edge-white-text); /* Ensure text is white for contrast */
        padding: 0.75rem 1.5rem;
        font-size: 1.05rem;
        font-weight: 600;
        border-radius: 8px;
        transition: all 0.2s ease-in-out;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

        .btn-add-vehicle:hover {
            /* Adjust hover color based on your desired effect, here slightly darker light purple */
            background-color: color-mix(in srgb, var(--insure-edge-light-purple) 85%, black);
            /* Keep border dark purple on hover or adjust */
            border-color: var(--insure-edge-dark-purple);
            transform: translateY(-2px);
            /* Adjust box-shadow to fit the purple theme */
            box-shadow: 0 4px 10px rgba(var(--insure-edge-light-purple), 0.2); /* Soft shadow */
            color: var(--insure-edge-white-text);
        }

        .btn-add-vehicle:active {
            transform: translateY(0);
            box-shadow: none;
        }

    /* Table Styling */
    .table {
        margin-top: 30px;
        border-collapse: separate;
        border-spacing: 0;
    }

        .table thead th {
            /* CHANGE: Table header background to dark purple */
            background-color: var(--insure-edge-dark-purple); /* Reference from site.css */
            color: var(--insure-edge-white-text); /* White text on dark header */
            font-weight: 600;
            padding: 1rem 1.25rem;
            vertical-align: middle;
            border: none;
            position: sticky;
            top: 0;
            z-index: 1;
            text-align: left; /* Default text alignment */
        }

            .table thead th:last-child {
                text-align: center; /* Center actions header */
            }

            /* Rounded corners for table header */
            .table thead th:first-child {
                border-top-left-radius: 8px;
            }

            .table thead th:last-child {
                border-top-right-radius: 8px;
            }

        .table tbody tr {
            transition: background-color 0.2s ease-in-out, transform 0.1s ease;
        }

            .table tbody tr:nth-of-type(even) {
                background-color: #fcfcfc; /* Slightly off-white stripe */
            }

            .table tbody tr:hover {
                /* CHANGE: Table row hover to a light tint of a purple variable */
                background-color: rgba(var(--insure-edge-light-purple), 0.2); /* Light purple tint on hover */
                transform: translateY(-1px);
                box-shadow: 0 2px 8px rgba(0,0,0,0.03); /* Very subtle shadow on hover */
            }

        .table tbody td {
            padding: 1rem 1.25rem;
            vertical-align: middle;
            border-top: 1px solid var(--dashboard-activity-border); /* Light border between rows from site.css */
            color: var(--insure-edge-dark-text); /* Using text color from site.css */
        }

            .table tbody td:last-child {
                text-align: center; /* Center actions column in body */
            }

    /* Action Buttons within the table */
    .btn-table-action {
        padding: 0.5rem 1rem;
        font-size: 0.9rem;
        font-weight: 500;
        border-radius: 6px;
        transition: all 0.2s ease-in-out;
        display: inline-flex;
        align-items: center;
        gap: 6px;
    }

        .btn-table-action:hover {
            transform: translateY(-1px);
        }

    .btn-edit {
        background-color: var(--insure-edge-accent-yellow); /* Using accent yellow from site.css */
        border-color: var(--insure-edge-accent-yellow);
        color: var(--insure-edge-dark-text); /* Dark text for contrast on yellow */
    }

        .btn-edit:hover {
            background-color: color-mix(in srgb, var(--insure-edge-accent-yellow) 85%, black);
            border-color: color-mix(in srgb, var(--insure-edge-accent-yellow) 85%, black);
            color: var(--insure-edge-dark-text);
        }

    .btn-delete {
        background-color: var(--insure-edge-accent-red); /* Using accent red from site.css */
        border-color: var(--insure-edge-accent-red);
        color: var(--insure-edge-white-text);
    }

        .btn-delete:hover {
            background-color: color-mix(in srgb, var(--insure-edge-accent-red) 85%, black);
            border-color: color-mix(in srgb, var(--insure-edge-accent-red) 85%, black);
            color: var(--insure-edge-white-text);
        }

    /* Alert for no vehicles found */
    .alert-no-vehicles {
        background-color: var(--insure-edge-accent-blue); /* Using accent blue from site.css */
        color: var(--insure-edge-white-text);
        border-color: color-mix(in srgb, var(--insure-edge-accent-blue) 80%, black);
        padding: 2rem; /* More padding for a softer look */
        border-radius: 12px;
        text-align: center;
        font-size: 1.15rem;
        margin-top: 40px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
    }

        .alert-no-vehicles .alert-heading {
            color: var(--insure-edge-white-text);
            font-weight: 700;
            margin-bottom: 15px;
            font-size: 1.8rem;
        }

        .alert-no-vehicles p {
            color: var(--insure-edge-white-text);
            opacity: 0.9;
            line-height: 1.6;
        }

        .alert-no-vehicles hr {
            border-top-color: rgba(255, 255, 255, 0.3);
            margin: 20px 0;
        }

    /* General success/danger alerts from TempData */
    .alert-success {
        background-color: var(--insure-edge-accent-green); /* Using accent green from site.css */
        color: var(--insure-edge-white-text);
        border-color: color-mix(in srgb, var(--insure-edge-accent-green) 80%, black);
    }

    .alert-danger {
        background-color: var(--insure-edge-accent-red); /* Using accent red from site.css */
        color: var(--insure-edge-white-text);
        border-color: color-mix(in srgb, var(--insure-edge-accent-red) 80%, black);
    }

    .alert .btn-close {
        filter: invert(1); /* Makes the close button white for dark alerts */
        opacity: 0.8;
    }
</style>

<div class="container vehicles-main-card">
    <h2>My Vehicles</h2>

    <div class="d-flex justify-content-end mb-4">
        <a asp-controller="Vehicle" asp-action="Add" class="btn btn-add-vehicle">
            <i class="bi bi-plus-circle-fill"></i> Add New Vehicle
        </a>
    </div>

    @* Display Success/Error Messages from TempData *@
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show mt-3" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model != null && Model.Any())
    {
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>Registration Number</th>
                        <th>Make</th>
                        <th>Model</th>
                        <th>Year</th>
                        <th>Type</th>
                        <th>Action</th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var v in Model)
                    {
                        <tr>
                            <td>@v.registrationNumber</td>
                            <td>@v.make</td>
                            <td>@v.model</td>
                            <td>@v.yearOfManufacture</td>
                            <td>@v.vehicleType.ToString()</td>
                            <td>
                                <form asp-action="Delete" asp-route-vehicleId="@v.vehicleId" method="post" style="display:inline;" onsubmit="return confirm('Are you sure you want to delete this vehicle? This action cannot be undone.');">
                                    <button type="submit" class="btn btn-table-action btn-delete" title="Delete Vehicle">
                                        <i class="bi bi-trash"></i> Delete
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-no-vehicles" role="alert">
            <h4 class="alert-heading"><i class="bi bi-info-circle-fill me-2"></i> No Vehicles Found!</h4>
            <p>It looks like you haven't added any vehicles to your account yet.</p>
            <hr>
            <p class="mb-0">Click the "Add New Vehicle" button above to get started!</p>
        </div>
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}